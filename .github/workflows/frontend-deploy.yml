name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # package-lock.json 이 없으면 npm ci가 실패할 수 있어요 → 그땐 npm install 로 바꾸세요.
      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build
        env:
          CI: ""  

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 정적 파일(HTML 제외)은 길게 캐시
      - name: Sync static to S3 (non-HTML)
        run: |
          aws s3 sync build s3://${{ secrets.S3_BUCKET }} \
            --delete \
            --exclude "*.html" \
            --cache-control "public,max-age=31536000,immutable"

      # HTML은 즉시 반영되도록 no-cache
      - name: Upload HTML with no-cache
        run: |
          aws s3 cp build s3://${{ secrets.S3_BUCKET }} \
            --recursive \
            --exclude "*" --include "*.html" \
            --cache-control "no-cache, no-store, max-age=0, must-revalidate" \
            --content-type "text/html"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} \
            --paths "/*"
